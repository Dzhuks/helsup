# Generated by Django 4.1.7 on 2023-03-26 13:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='имя')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='электронная почта')),
                ('phone_number', models.CharField(max_length=12)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_images', verbose_name='картинка')),
                ('age', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(14), django.core.validators.MaxValueValidator(130)], verbose_name='возраст')),
                ('sex', models.SmallIntegerField(blank=True, choices=[(0, 'Мужской'), (1, 'Женский')], null=True, verbose_name='пол')),
                ('city', models.CharField(blank=True, max_length=40, null=True, verbose_name='регион')),
                ('mobility', models.CharField(blank=True, choices=[('Нету', 'Люди, не имеющие ограничений по мобильности'), ('M1', 'Люди, не имеющие инвалидности со сниженной мобильностью (люди пенсионного возраста, люди с детьми дошкольного возраста, беременные женщины), а также глухие и слабослышащие'), ('M2', 'Пожилые немощные люди (в том числе инвалиды по старости), инвалиды с недостатками зрения, пользующиеся белой тростью'), ('M3', 'Инвалиды и другие маломобильные граждане, не относящиеся к группе М2, использующие при движении дополнительные опоры (костыли, трости), инвалиды на протезах'), ('M4', 'Инвалиды и другие маломобильные граждане, не относящиеся к группе М2, передвигающиеся на креслах-колясках'), ('HM', 'Немобильные граждане'), ('HT', 'Нетранспортабельные люди'), ('HO', 'Люди с ограниченной степенью свободы, в том числе люди с психическими отклонениями')], max_length=10, null=True, verbose_name='мобильность')),
                ('about_me', models.TextField(blank=True, default='', max_length=600, verbose_name='о себе')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='оценка')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
        ),
    ]
